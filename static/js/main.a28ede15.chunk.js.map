{"version":3,"sources":["cell.js","dialog.js","settingDialog.js","game.js","logManager.js","dataAnalysis.js","index.js","langpack.js"],"names":["GamePage","handleClick","props","onDig","data","this","value","digged","marked","classList","status","valueDisplay","className","join","onClick","Component","Dialog","container","visible","document","body","removeChild","createElement","add","modalClass","appendChild","customClass","push","ReactDOM","render","children","limitValue","min","max","SettingDialog","state","display","width","height","mines","errorMsg","resolve","reject","handleInputChange","e","target","test","Number","name","MAX_WIDTH","setState","setLevel","level","startGame","errorList","length","maxMines","cancelSubmit","param","Promise","Object","assign","Translation","t","autoComplete","maxLength","onInput","map","VALUE_MINE","board","operation","$refs","settingDialog","createRef","openSetting","a","current","open","localStorage","setItem","JSON","stringify","console","error","row","array","col","key","Math","random","handleDig","cell","initMines","dig","autoproc","gameFinished","forEach","counter","time","Date","getTime","success","storageData","storageDataRaw","getItem","parse","Array","isArray","item","id","uuid","writeLog","openDataAnalysis","window","location","rows","cols","row0","col0","result","count","getNeighbours","mineCount","y","x","RangeError","cellList","i","j","floor","temp","iCell","splice","getNeighbourMineCount","further","neighbours","filter","mark","markCount","settingData","statusClass","statusMsg","remainMines","class","ref","DataAnalysis","dataRaw","dataList","exportJSON","saveAs","Blob","type","exportDBF","dbfData","ID","WIDTH","HEIGHT","MINES","SUCCESS","START","TIME","toFixed","dbf","structure","buffer","goBack","readLog","listLow","listMid","listHigh","label","getStatResult","success_times","one_click_finish","total_steps","time_total","success_rate","average_steps","average_time","i18n","use","initReactI18next","LanguageDetector","init","resources","translation","fallbackLng","keySeparator","interpolation","escapeValue","detection","order","lookupQuerystring","caches","then","title","StrictMode","path","exact","component","to","from","getElementById"],"mappings":"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","file":"static/js/main.a28ede15.chunk.js","sourcesContent":["import {Component} from 'react';\r\n\r\nconst VALUE_MINE=9;\r\nexport default class GamePage extends Component{\r\n    handleClick=()=>{\r\n        this.props.onDig(this.props.data);\r\n    }\r\n    render(){\r\n        let data=this.props.data, value=data.value&0x0f;\r\n        let digged=data.value&0x80, marked=data.value&0x40;\r\n        let classList=[\r\n            'cell',\r\n            digged ? 'digged' : '',\r\n            VALUE_MINE===value ? 'mine' : '',\r\n            marked ? 'marked' : '',\r\n            'failed'===this.props.status || 'success'===this.props.status ? 'inactive' : ''\r\n        ];\r\n        let valueDisplay='';\r\n        if(marked){\r\n            valueDisplay='★';\r\n        }else if(digged){\r\n            switch(value){\r\n                case VALUE_MINE:\r\n                    valueDisplay='雷';\r\n                break;\r\n                case 0:\r\n                    valueDisplay='';\r\n                break;\r\n                default:\r\n                    valueDisplay=value;\r\n                break;\r\n            }\r\n        }else if('failed'===this.props.status && VALUE_MINE===value){\r\n            valueDisplay='雷';\r\n        }\r\n        return (\r\n            <div className={classList.join(' ')} onClick={this.handleClick}>\r\n                {valueDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class Dialog extends Component{\r\n  container=null;\r\n  constructor(){\r\n    super();\r\n  }\r\n  componentDidUpdate(){\r\n    let visible=this.props.visible;\r\n    //切换body上的容器的新建和销毁\r\n    if(!visible && this.container){\r\n      let body = document.body;\r\n      body.removeChild(this.container);\r\n      this.container=null;\r\n    }else if(visible && !this.container){\r\n      let body = document.body;\r\n      let container = document.createElement(\"div\");\r\n      container.classList.add('dialog-container');\r\n      if(this.props.modalClass){\r\n        container.classList.add(this.props.modalClass);\r\n      }\r\n      this.container=container;\r\n      body.appendChild(container);\r\n    }\r\n    //更新对话框里的内容\r\n    if(!visible){\r\n      return;\r\n    }\r\n    let classList=[\r\n      'dialog-body'\r\n    ];\r\n    if(this.props.customClass){\r\n      classList.push(this.props.customClass);\r\n    }\r\n    ReactDOM.render(\r\n      <div className={classList.join(' ')}>{this.props.children}</div>,\r\n      this.container\r\n    );\r\n  }\r\n  render(){\r\n    return null;\r\n  }\r\n}","import {Component} from 'react';\r\nimport Dialog from './dialog';\r\nimport { Translation } from 'react-i18next';\r\n\r\nconst MIN_WIDTH=4;\r\nconst MAX_WIDTH=30;\r\nconst MIN_HEIGHT=4;\r\nconst MAX_HEIGHT=24;\r\n\r\nfunction limitValue(value,min,max){\r\n  if(value<min){\r\n    return min;\r\n  }else if (value>max){\r\n    return max;\r\n  }\r\n  return value;\r\n}\r\nexport default class SettingDialog extends Component{\r\n  state={\r\n    display:false,\r\n    width:30,\r\n    height:16,\r\n    mines:99,\r\n    errorMsg:null\r\n  }\r\n  resolve=null;\r\n  reject=null;\r\n  constructor(){\r\n    super();\r\n  }\r\n  open(param){\r\n    return new Promise((resolve,reject)=>{\r\n      Object.assign(this,{\r\n        resolve,\r\n        reject\r\n      });\r\n      this.setState({\r\n        ...param,\r\n        errorMsg:null,\r\n        display:true\r\n      });\r\n    })\r\n  }\r\n  handleInputChange=(e)=>{\r\n    const target = e.target;\r\n    let value=target.value;\r\n    if(/^\\d+$/.test(value)){\r\n      value=Number(value);\r\n      switch(target.name){\r\n        case 'width':\r\n          value=limitValue(value,MIN_WIDTH,MAX_WIDTH);\r\n        break;\r\n        case 'height':\r\n          value=limitValue(value,MIN_HEIGHT,MAX_HEIGHT);\r\n        break;\r\n        case 'mines':\r\n          value=limitValue(value,4,MAX_WIDTH*MAX_HEIGHT-1);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      [target.name]: value\r\n    });\r\n  }\r\n  setLevel=(level)=>{\r\n    switch(level){\r\n      case 'beginner':\r\n        this.setState({\r\n          width:10,\r\n          height:10,\r\n          mines:10\r\n        });\r\n      break;\r\n      case 'medium':\r\n        this.setState({\r\n          width:16,\r\n          height:16,\r\n          mines:40\r\n        });\r\n      break;\r\n      case 'expert':\r\n        this.setState({\r\n          width:30,\r\n          height:16,\r\n          mines:99\r\n        });\r\n      break;\r\n    }\r\n    this.setState({\r\n      errorMsg:null\r\n    });\r\n  }\r\n  startGame=()=>{\r\n    let {width,height,mines}=this.state;\r\n    let errorList=[];\r\n    if(!/^\\d+$/.test(width)){\r\n      errorList.push('error_width');\r\n    }\r\n    if(!/^\\d+$/.test(height)){\r\n      errorList.push('error_height');\r\n    }\r\n    if(!/^\\d+$/.test(mines)){\r\n      errorList.push('error_mines');\r\n    }\r\n    if(errorList.length){\r\n      this.setState({\r\n        errorMsg:errorList\r\n      });\r\n      return;\r\n    }\r\n    width=Number(width);\r\n    height=Number(height);\r\n    mines=Number(mines);\r\n    let maxMines=width*height-1;\r\n    if(mines>maxMines){\r\n      mines=maxMines;\r\n    }\r\n    \r\n    if(this.resolve){\r\n      this.resolve({\r\n        width,\r\n        height,\r\n        mines\r\n      });\r\n    }\r\n    this.resolve=this.reject=null;\r\n    this.setState({\r\n      width,\r\n      height,\r\n      mines,\r\n      display:false\r\n    });\r\n  }\r\n  cancelSubmit=()=>{\r\n    if(this.reject){\r\n      this.reject('cancel');\r\n    }\r\n    this.resolve=this.reject=null;\r\n    this.setState({\r\n      display:false,\r\n      errorMsg:null\r\n    });\r\n  }\r\n  render(){\r\n    let errorMsg=this.state.errorMsg;\r\n    return (\r\n      <Translation>{t=>(\r\n        <Dialog visible={this.state.display} customClass='settingDialog'>\r\n          <div className='levelSelection'>\r\n            <span className='selectLevel' onClick={e=>this.setLevel('beginner')}>{t('Beginner')}</span>\r\n            <span className='selectLevel' onClick={e=>this.setLevel('medium')}>{t('Middle')}</span>\r\n            <span className='selectLevel' onClick={e=>this.setLevel('expert')}>{t('Expert')}</span>\r\n          </div>\r\n          <table className='gameSettingForm'>\r\n            <colgroup>\r\n              <col className='columnTitle'/>\r\n              <col className='columnInput'/>\r\n            </colgroup>\r\n            <tbody>\r\n              <tr className='formItem'>\r\n                <td className='itemTitle'>{t('Width')} ({MIN_WIDTH}-{MAX_WIDTH})</td>\r\n                <td>\r\n                  <input name='width' autoComplete=\"off\" maxLength='2' value={this.state.width} onInput={this.handleInputChange}/>\r\n                </td>\r\n              </tr>\r\n              <tr className='formItem'>\r\n                <td className='itemTitle'>{t('Height')} ({MIN_HEIGHT}-{MAX_HEIGHT})</td>\r\n                <td>\r\n                  <input name='height' autoComplete=\"off\" maxLength='2' value={this.state.height} onInput={this.handleInputChange}/>\r\n                </td>\r\n              </tr>\r\n              <tr className='formItem'>\r\n                <td className='itemTitle'>{t('Mines Count')} (2-{MAX_WIDTH*MAX_HEIGHT-1})</td>\r\n                <td>\r\n                  <input name='mines' autoComplete=\"off\" maxLength='3' value={this.state.mines} onInput={this.handleInputChange}/>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {errorMsg && <div className='errorMsg'>{errorMsg.map(t).join('\\n')}</div>}\r\n          <div className='footer'>\r\n            <button className='startGame' onClick={this.startGame}><span>{t('OK')}</span></button>\r\n            <button className='cancelSetting' onClick={this.cancelSubmit}><span>{t('Cancel')}</span></button>\r\n          </div>\r\n        </Dialog>\r\n      )}</Translation>\r\n    );\r\n  }\r\n}\r\n","import {Component, createRef} from 'react';\r\nimport Cell from './cell';\r\nimport {writeLog} from './logManager';\r\nimport SettingDialog from './settingDialog.js';\r\nimport { Translation } from 'react-i18next';\r\n\r\nexport const VALUE_MINE=9;\r\nexport default class GamePage extends Component{\r\n  state={\r\n    width:null,\r\n    height:null,\r\n    mines:null,\r\n    board:[],\r\n    operation:[],\r\n    status:'initial'\r\n  };\r\n  $refs={\r\n    settingDialog:createRef()\r\n  }\r\n  constructor(){\r\n      super();\r\n  }\r\n  openSetting=async()=>{\r\n    try{\r\n      let data = await this.$refs.settingDialog.current.open({\r\n        width:this.state.width,\r\n        height:this.state.height,\r\n        mines:this.state.mines\r\n      });\r\n      await this.setState(data);\r\n      this.startGame();\r\n      localStorage.setItem('react-minesweeper-settings',JSON.stringify(data));\r\n    }catch(e){\r\n      if('cancel'!==e){\r\n        console.error(e);\r\n      }\r\n    }\r\n  }\r\n  startGame=()=>{\r\n    let board=[], width=this.state.width, height=this.state.height;\r\n    for(let row=0;row<height;row++){\r\n        let array=[];\r\n        for(let col=0;col<width;col++){\r\n            array.push({\r\n                key:Math.random(),\r\n                row,\r\n                col,\r\n                value:0\r\n            });\r\n        }\r\n        board.push({\r\n            key:Math.random(),\r\n            data:array\r\n        });\r\n    }\r\n    this.setState({\r\n      board,\r\n      operation:[],\r\n      status:'initial'\r\n    });\r\n  }\r\n  getNeighbours(rows,cols,row0,col0){\r\n    let result=[];\r\n    for(let row=row0-1; row<=row0+1; row++){\r\n      for(let col=col0-1; col<=col0+1; col++){\r\n        if(row<0 || row>=rows || col<0 || col>=cols || (row===row0 && col===col0)){\r\n          continue;\r\n        }\r\n        result.push({\r\n          row,col\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getNeighbourMineCount(target,row0,col0){\r\n      let rows=target.length, cols=target[0].data.length, count=0,row,col;\r\n      for({row,col} of this.getNeighbours(rows,cols,row0,col0)){\r\n          let cell=target[row].data[col];\r\n          if(VALUE_MINE===(cell.value&0xf)){\r\n              count++;\r\n          }\r\n      }\r\n      return count;\r\n  }\r\n  initMines(target,mineCount,y,x){\r\n      let rows=target.length, cols=target[0].data.length;\r\n      if(mineCount >= rows*cols){\r\n        throw new RangeError('Too many mines');\r\n      }\r\n\r\n      let cellList=[];\r\n      for(let row=0; row<rows; row++){\r\n        for(let col=0; col<cols; col++){\r\n          //跳过被点击的位置\r\n          if(y===row && x===col){\r\n            continue;\r\n          }\r\n\r\n          cellList.push({\r\n            row,col\r\n          });\r\n        }\r\n      }\r\n\r\n      //对坐标列表进行洗牌\r\n      let length=cellList.length;\r\n      for(let i=0; i<length; i++){\r\n        if(Math.random()>0.5){\r\n          continue;\r\n        }\r\n        let j=Math.floor(Math.random()*(length-i-1))+i+1;\r\n        if(cellList[j]){\r\n          let temp=cellList[i];\r\n          cellList[i]=cellList[j];\r\n          cellList[j]=temp;\r\n        }\r\n      }\r\n\r\n      //布雷\r\n      for(let i=0; i<mineCount && cellList.length; i++){\r\n        let iCell=Math.floor(Math.random()*(cellList.length-1));\r\n        try{\r\n          let {row,col}=cellList[iCell];\r\n          target[row].data[col].value=VALUE_MINE;\r\n          cellList.splice(iCell,1);\r\n        }catch(e){\r\n          console.error(iCell,cellList.length,cellList[iCell]);\r\n        }\r\n      }\r\n\r\n      //标上数字\r\n      for(let row=0; row<rows; row++){\r\n        for(let col=0; col<cols; col++){\r\n          let cell=target[row].data[col];\r\n          if(VALUE_MINE===cell.value){\r\n              continue;\r\n          }\r\n          cell.value=this.getNeighbourMineCount(target,row,col);\r\n        }\r\n      }\r\n  }\r\n  dig(target,row0,col0){\r\n      let cell=target[row0].data[col0], counter=cell.value&0x0f;\r\n\r\n      //不可挖开的方块\r\n      if(cell.value&0xc0){\r\n        return 0;\r\n      }\r\n\r\n      //挖开该方块\r\n      target[row0].data[col0].value |= 0x80;\r\n\r\n      //挖到雷\r\n      if(VALUE_MINE===counter){\r\n        return -1;\r\n      }\r\n\r\n      return 1;\r\n  }\r\n  mark(target,row,col){\r\n      target[row].data[col].value |= 0x40;\r\n  }\r\n  autoproc(target){\r\n    let rows=target.length, cols=target[0].data.length;\r\n    let further=false;\r\n\r\n    //找到空方块，然后挖开周围方块；找到周边未挖开块数等于当前块雷数的块，然后把周围块标上\r\n    for(let row=0; row<rows; row++){\r\n      for(let col=0; col<cols; col++){\r\n        let cell=target[row].data[col], counter=cell.value&0x0f;\r\n        if(VALUE_MINE===counter || !(0xC0 & cell.value)){\r\n          continue;\r\n        }\r\n        let neighbours=this.getNeighbours(rows,cols,row,col).filter(({row,col})=>{\r\n            let cell=target[row].data[col];\r\n            return !(0x80&cell.value);\r\n        });\r\n        if(0===counter){\r\n          neighbours.forEach(({row,col})=>{\r\n              if(this.dig(target,row,col)){\r\n                  further=true;\r\n              }\r\n          });\r\n        }else if(neighbours.length === counter){\r\n          neighbours.forEach(({row,col})=>{\r\n              this.mark(target,row,col);\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //找到周边被标记块数等于当前块雷数的块，然后把周围未标记且未挖开的块挖开\r\n    for(let row=0; row<rows; row++){\r\n      for(let col=0; col<cols; col++){\r\n        let cell=target[row].data[col], counter=cell.value&0x0f;\r\n        if(VALUE_MINE===counter || !(0xC0 & cell.value) || 0===counter){\r\n          continue;\r\n        }\r\n\r\n        //当前块周围被标记的块的个数\r\n        let neighbours=this.getNeighbours(rows,cols,row,col), markCount=0;\r\n        neighbours.forEach(({row,col})=>{\r\n          let cell=target[row].data[col];\r\n          if(0x40&cell.value){\r\n            markCount++;\r\n          }\r\n        });\r\n\r\n        //当前块周围被标记的块的个数不等于当前块的雷数\r\n        if(counter!==markCount){\r\n          continue;\r\n        }\r\n\r\n        //当前块周围未挖开且未标记的块挖开\r\n        neighbours.forEach(({row,col})=>{\r\n          let cell=target[row].data[col];\r\n          if(!(0xC0&cell.value)){\r\n            further=true;\r\n            this.dig(target,row,col);\r\n          }\r\n        });\r\n\r\n        //挖到雷了\r\n        if('failed'===this.status){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return further;\r\n  }\r\n  gameFinished(target){\r\n    let rows=target.length, cols=target[0].data.length;\r\n    for(let row=0; row<rows; row++){\r\n      for(let col=0; col<cols; col++){\r\n        let cell=target[row].data[col], counter=cell.value&0x0f;\r\n        if(VALUE_MINE!==counter && !(0x80&cell.value)){\r\n            return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  handleDig=(data)=>{\r\n    let state=this.state;\r\n    let board=state.board.map(row=>({\r\n        ...row,\r\n        data:row.data.map(cell=>({\r\n            ...cell\r\n        }))\r\n    })), status=state.status;\r\n    //游戏结束了\r\n    if('failed'===status || 'success'===status){\r\n        return;\r\n    }\r\n\r\n    //刚开始挖时布雷\r\n    if('initial'===status){\r\n        this.initMines(board,state.mines,data.row,data.col);\r\n        status='running';\r\n    }\r\n\r\n    //挖开方块\r\n    let ret = this.dig(board,data.row,data.col);\r\n    if(-1===ret){\r\n        status='failed';\r\n    }\r\n\r\n    //处理更多雷\r\n    while('running'===status && this.autoproc(board)){}\r\n\r\n    //当前局面是否完成\r\n    if('running'===status && this.gameFinished(board)){\r\n      //完成时把没标上的地雷标上\r\n      for(let row of board){\r\n        row.data.forEach((cell,col)=>{\r\n          let counter=cell.value&0x0f;\r\n          if(VALUE_MINE===counter){\r\n            row.data[col].value|=0x40;\r\n          }\r\n        });\r\n      }\r\n      status='success';\r\n    }\r\n\r\n    //新加一步\r\n    let operation=[ //记录操作\r\n      ...state.operation,\r\n      {\r\n        time:new Date().getTime(),\r\n        col:data.col,\r\n        row:data.row\r\n      }\r\n    ];\r\n\r\n    //成功或失败时记录当前局面\r\n    if('failed'===status || 'success'===status){\r\n      writeLog(board,operation,'success'===status);\r\n    }\r\n    \r\n    this.setState({\r\n      ...state,\r\n      operation,\r\n      status,\r\n      board\r\n    });\r\n  }\r\n  async componentDidMount() {\r\n    //从localStorage获取设置，没获取到就用默认值\r\n    await this.setState({\r\n      width:30,\r\n      height:16,\r\n      mines:99\r\n    });\r\n    try{\r\n      let settingData=localStorage.getItem('react-minesweeper-settings');\r\n      if(settingData){\r\n        settingData=JSON.parse(settingData);\r\n        await this.setState({\r\n          width:Number(settingData.width),\r\n          height:Number(settingData.height),\r\n          mines:Number(settingData.mines)\r\n        });\r\n      }\r\n    }catch(e){\r\n      console.error(e);\r\n    }\r\n    this.startGame();\r\n  }\r\n  openDataAnalysis=()=>{\r\n    window.location='#/dataAnalysis';\r\n  }\r\n  render(){\r\n    let status=this.state.status;\r\n    let statusClass=status, statusMsg='';\r\n    switch(status){\r\n      case 'success':\r\n        statusMsg='Succeed';\r\n      break;\r\n      case 'failed':\r\n        statusMsg='Failed';\r\n      break;\r\n    }\r\n    let remainMines=this.state.mines;\r\n    for(let row of this.state.board){\r\n      for(let cell of row.data){\r\n        if(0x40&cell.value){\r\n          remainMines--;\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <Translation>{t=>(\r\n        <div className=\"gamePage\">\r\n          <div className=\"titleBar\">\r\n            <div class='btnGroup'>\r\n              <span className='newGame btn-link' onClick={this.startGame}>{t('New Game')}</span>\r\n              <span className='back btn-link' onClick={this.openSetting}>{t('Settings')}</span>\r\n              <span className='newGame btn-link' onClick={this.openDataAnalysis}>{t('Data Analysis')}</span>\r\n            </div>\r\n            <div class='statusGroup'>\r\n              <span className='steps'>{t('Steps')}{this.state.operation.length}</span>\r\n              <span className='remainMines'>{t('Remain')}{remainMines}</span>\r\n            </div>\r\n          </div>\r\n          <div className={['statusLine', statusClass].join(' ')}>{statusMsg ? t(statusMsg) : null}</div>\r\n          <div className='gamePadOuter'>\r\n            <div className='gamePad'>\r\n              {\r\n                this.state.board.map(row=><div className='gamePadRow' key={row.key}>\r\n                  {\r\n                    row.data.map(cell=><Cell data={cell} key={cell.key} onDig={this.handleDig} status={this.state.status}></Cell>)\r\n                  }\r\n                </div>)\r\n              }\r\n            </div>\r\n          </div>\r\n          <SettingDialog ref={this.$refs.settingDialog}></SettingDialog>\r\n        </div>\r\n      )}</Translation>\r\n    );\r\n  }\r\n}\r\n","import {v4 as uuid} from 'uuid';\r\nimport {VALUE_MINE} from './game.js';\r\n\r\nexport function writeLog(board,operation,success=false){\r\n    let width=board[0].data.length, height=board.length, mines=[];\r\n    for(let row=0; row<height; row++){\r\n        for(let col=0; col<width; col++){\r\n            let value=board[row].data[col].value;\r\n            if(VALUE_MINE===(value&0x0f)){\r\n                mines.push({col,row});\r\n            }\r\n        }\r\n    }\r\n\r\n    let storageData=[];\r\n    try{\r\n        let storageDataRaw=localStorage.getItem('react-minesweeper-log');\r\n        if(storageDataRaw){\r\n            storageData=JSON.parse(storageDataRaw);\r\n        }\r\n    }catch(e){\r\n        console.error(e);\r\n    }\r\n    if(!Array.isArray(storageData)){\r\n        storageData=[];\r\n    }\r\n    for(let item of storageData){\r\n        if(!item.id){\r\n            item.id=uuid();\r\n        }\r\n    }\r\n    storageData.push({\r\n        id:uuid(),\r\n        width,\r\n        height,\r\n        success,\r\n        mines,\r\n        operation\r\n    });\r\n    localStorage.setItem('react-minesweeper-log',JSON.stringify(storageData));\r\n}\r\nexport function readLog(){\r\n    let storageData=[];\r\n    try{\r\n        let storageDataRaw=localStorage.getItem('react-minesweeper-log');\r\n        if(storageDataRaw){\r\n            storageData=JSON.parse(storageDataRaw);\r\n        }\r\n    }catch(e){\r\n        console.error(e);\r\n    }\r\n    return storageData;\r\n}\r\n","import {Component} from 'react';\r\nimport { Translation } from 'react-i18next';\r\nimport {readLog} from './logManager';\r\nimport {saveAs} from 'file-saver';\r\nimport './dataAnalysis.scss';\r\nimport dbf from 'dbf';\r\nexport default class DataAnalysis extends Component{\r\n    state={\r\n        dataRaw:null,\r\n        dataList:[]\r\n    };\r\n    componentWillMount(){\r\n        let dataRaw = readLog();\r\n        let listLow = dataRaw.filter(item=>(10===item.width && 10===item.height && 10===item.mines.length));\r\n        let listMid = dataRaw.filter(item=>(16===item.width && 16===item.height && 40===item.mines.length));\r\n        let listHigh = dataRaw.filter(item=>(\r\n            ((30===item.width && 16===item.height) || (16===item.width && 30===item.height))\r\n            && 99===item.mines.length));\r\n        this.setState({\r\n            dataRaw,\r\n            dataList:[\r\n                {\r\n                    label:'初级',\r\n                    ...this.getStatResult(listLow)\r\n                },\r\n                {\r\n                    label:'中级',\r\n                    ...this.getStatResult(listMid)\r\n                },\r\n                {\r\n                    label:'高级',\r\n                    ...this.getStatResult(listHigh)\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    getStatResult(data){\r\n        let success_times=0, one_click_finish=0, total_steps=0, time_total=0;\r\n        for(let item of data){\r\n            if(item.success){\r\n                success_times++;\r\n            }\r\n            if(1===item.operation.length){\r\n                one_click_finish++;\r\n            }\r\n            total_steps+=item.operation.length;\r\n            let time=item.operation[item.operation.length-1].time-item.operation[0].time;\r\n            time_total+=time;\r\n        }\r\n        return{\r\n            success_rate: data.length ? success_times/data.length : 0,\r\n            one_click_finish,\r\n            average_steps: data.length ? total_steps/data.length : 0,\r\n            average_time: data.length ? time_total/data.length : 0,\r\n        }\r\n    }\r\n    exportJSON=()=>{\r\n        saveAs(new Blob([JSON.stringify(this.state.dataRaw)], {type: \"text/plain;charset=utf-8\"}),'minesweeper-log.json');\r\n    }\r\n    exportDBF=()=>{\r\n        let dbfData=[];\r\n        for(let item of this.state.dataRaw){\r\n            dbfData.push({\r\n                ID:item.id,\r\n                WIDTH:item.width,\r\n                HEIGHT:item.height,\r\n                MINES:item.mines.length,\r\n                SUCCESS:item.success ? 'Y' : 'N',\r\n                START:item.operation[0].time,\r\n                TIME:((item.operation[item.operation.length-1].time-item.operation[0].time)/1000).toFixed(2)\r\n            });\r\n        }\r\n        saveAs(new Blob([dbf.structure(dbfData).buffer]),'mine.dbf');\r\n    }\r\n    goBack=()=>{\r\n        window.location='#/';\r\n    }\r\n    render(){\r\n        return <Translation>{t=>(\r\n            <div className='dataAnalysis'>\r\n                <div className='toolbox'>\r\n                    <span className='btn-link' onClick={this.goBack}>{t('Back')}</span>\r\n                    <span className='btn-link' onClick={this.exportJSON}>{t('Export JSON')}</span>\r\n                    <span className='btn-link' onClick={this.exportDBF}>{t('Export DBF')}</span>\r\n                </div>\r\n                <table className='mainTable'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>级别</th>\r\n                            <th>成功率</th>\r\n                            <th>平均步数</th>\r\n                            <th>平均用时</th>\r\n                            <th>一次成功次数</th>\r\n                        </tr>\r\n                        {\r\n                            this.state.dataList.map(item=>{\r\n                                return <tr key={item.label}>\r\n                                    <td>{item.label}</td>\r\n                                    <td>{(item.success_rate*100).toFixed(2)}%</td>\r\n                                    <td>{(item.average_steps).toFixed(2)}步</td>\r\n                                    <td>{(item.average_time/1000).toFixed(2)}s</td>\r\n                                    <td>{item.one_click_finish}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )}</Translation>\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport GamePage from './game';\nimport DataAnalysis from './dataAnalysis';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\n//import reportWebVitals from './reportWebVitals';\n\n//多语言准备\nimport i18n from 'i18next';\nimport resources from './langpack';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(initReactI18next).use(LanguageDetector).init({\n  resources,\n  fallbackLng: 'en',\n  keySeparator: false, // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n  detection:{\n    order: ['querystring','navigator'],\n    lookupQuerystring: 'language',\n    caches:[]\n  }\n}).then(t=>{\n  document.title=t('Minesweeper');\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Route path=\"/\" exact component={GamePage}></Route>\n      <Route path=\"/dataAnalysis\" exact component={DataAnalysis}></Route>\n      <Redirect to=\"/\" from='*'/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","export default{\r\n    'zh':{\r\n        translation:{\r\n            'Minesweeper':'扫雷',\r\n            'New Game':'新游戏',\r\n            'Data Analysis':'数据分析',\r\n            'Settings':'设置',\r\n            'Steps':'步数：',\r\n            'Remain':'剩余雷数：',\r\n            'Failed':'失败了',\r\n            'Succeed':'成功了',\r\n            'Beginner':'初级',\r\n            'Middle':'中级',\r\n            'Expert':'高级',\r\n            'Width':'宽度',\r\n            'Height':'高度',\r\n            'Mines Count':'雷数',\r\n            'OK':'确定',\r\n            'Cancel':'取消',\r\n            'error_width':'宽度值必须为整数',\r\n            'error_height':'高度值必须为整数',\r\n            'error_mines':'雷数必须为整数',\r\n            'Back':'返回',\r\n            'Export JSON':'导出JSON数据',\r\n            'Export DBF':'导出DBF数据'\r\n        }\r\n    },\r\n    'en':{\r\n        translation:{\r\n            'Minesweeper':'Minesweeper',\r\n            'New Game':'New Game',\r\n            'Data Analysis':'Data Analysis',\r\n            'Settings':'Settings',\r\n            'Steps':'Steps: ',\r\n            'Remain':'Remain: ',\r\n            'Failed':'Failed',\r\n            'Succeed':'Succeed',\r\n            'Beginner':'Beginner',\r\n            'Middle':'Middle',\r\n            'Expert':'Expert',\r\n            'Width':'Width',\r\n            'Height':'Height',\r\n            'Mines Count':'Mines',\r\n            'OK':'OK',\r\n            'Cancel':'Cancel',\r\n            'error_width':'Width must be integer',\r\n            'error_height':'Height must be integer',\r\n            'error_mines':'Mines must be integer',\r\n            'Back':'Back',\r\n            'Export JSON':'Export As JSON',\r\n            'Export DBF':'Export As DBF'\r\n        }\r\n    },\r\n    'ja':{\r\n        translation:{\r\n            'Minesweeper':'マインスイーパ',\r\n            'New Game':'スタート',\r\n            'Data Analysis':'データ解析',\r\n            'Settings':'設定',\r\n            'Steps':'操作回数：',\r\n            'Remain':'残り地雷：',\r\n            'Failed':'失敗しました',\r\n            'Succeed':'成功しました',\r\n            'Beginner':'初級',\r\n            'Middle':'中級',\r\n            'Expert':'上級',\r\n            'Width':'幅',\r\n            'Height':'高さ',\r\n            'Mines Count':'地雷の数',\r\n            'OK':'OK',\r\n            'Cancel':'キャンセル',\r\n            'error_width':'幅は整数でなければなりません',\r\n            'error_height':'高さは整数でなければなりません',\r\n            'error_mines':'地雷の数は整数でなければなりません',\r\n            'Back':'戻る',\r\n            'Export JSON':'JSONをエクスポート',\r\n            'Export DBF':'DBFをエクスポート'\r\n        }\r\n    }\r\n}"],"sourceRoot":""}